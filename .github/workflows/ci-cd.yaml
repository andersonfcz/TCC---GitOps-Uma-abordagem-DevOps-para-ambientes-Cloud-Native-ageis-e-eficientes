name: "CI/CD pipeline"

on:
    push:
        branches:
            - main
        paths:
            - src/**
    pull_request:
        paths:
            - src/**

jobs:
    docker-build:
        runs-on: ubuntu-latest
        
        defaults:
            run:
                working-directory: src/
                shell: bash
        
        steps:
            - uses: actions/checkout@v2.7.0
            - uses: actions/setup-python@v2
              with:
                python_version: 3.10.6

            - name: Install dependencies
              id: dependencies
              run: |
                curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - \
                && sudo touch /etc/apt/sources.list.d/mssql-release.list \
                && curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list | sudo tee -a /etc/apt/sources.list.d/mssql-release.list \
                && sudo apt update \
                && ACCEPT_EULA=Y sudo apt install -y msodbcsql18
                pip install -r requirements.txt

            - name: Run tests
              id: test
              if: github.event_name == 'pull_request'
              run: python manage.py test
              env:
                DB_NAME: ${{ secrets.DB_NAME }}
                DB_USER: ${{ secrets.DB_USER }}
                DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
                DB_HOST: ${{ secrets.DB_HOST }}
                TEST: true
                
            - name: Unit test status
              if: steps.test.outcome == 'failure'
              run: exit 1

            - name: Docker Login
              id: login
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.REGISTRY_USER }}
                password: ${{ secrets.REGISTRY_PASSWORD }}

            - name: Docker Image build and push
              id: build
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              uses: docker/build-push-action@v4
              with:
                context: .
                push: true
                tags: "${{env.REPOSITORY}}/${{env.IMAGENAME}}:${{env.TAG}}"
              env:
                TAG: ${{ github.run_number }}
                REPOSITORY: ${{ secrets.REGISTRY_USER }}
                IMAGENAME: tcc-gitops

            - name: Update Kubernetes Manifest
              id: update
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              uses: fjogeleit/yaml-update-action@main
              with:
                valueFile: 'manifests/api-deployment.yaml'
                propertyPath: 'spec.template.spec.containers.image'
                value: '${{env.REPOSITORY}}/${{env.IMAGENAME}}:${{env.TAG}}'
                branch: 'main'
                message: 'CI auto version update'
              env:
                TAG: ${{ github.run_number }}
                REPOSITORY: ${{ secrets.REGISTRY_USER }}
                IMAGENAME: tcc-gitops